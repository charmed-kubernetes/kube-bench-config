---
controls:
version: 1.13
id: 3
text: "etcd Node Security Configuration"
type: "master"
groups:
- id: 3.1
  text: "Configuration Files"
  checks:
  - id: 3.1.1
    text: "Ensure that the etcd pod specification file permissions are set to
    644 or more restrictive (Scored)"
    audit: "/bin/sh -c 'if test -e $etcdconf; then stat -c %a $etcdconf; fi'"
    type: "skip"
    tests:
      bin_op: or
      test_items:
        - flag: "644"
          compare:
            op: eq
            value: "644"
          set: true
        - flag: "640"
          compare:
            op: eq
            value: "640"
          set: true
        - flag: "600"
          compare:
            op: eq
            value: "600"
          set: true
    remediation: |
      Run the below command (based on the file location on your system) on the master node.
      For example,
      chmod 644 $etcdconf
    scored: true

  - id: 3.1.2
    text: "Ensure that the etcd pod specification file ownership is set to
    root:root (Scored)"
    audit: "/bin/sh -c 'if test -e $etcdconf; then stat -c %U:%G $etcdconf; fi'"
    type: "skip"
    tests:
      test_items:
      - flag: "root:root"
        compare:
          op: eq
          value: "root:root"
        set: true
    remediation: |
      Run the below command (based on the file location on your system) on the master node.
      For example,
      chown root:root $etcdconf
    scored: true

  - id: 3.1.3
    text: "Ensure that the etcd data directory permissions are set to 700 or more restrictive (Scored)"
    audit: ps -ef | grep $etcdbin | grep -- --data-dir | sed 's%.*data-dir[= ]\([^ ]*\).*%\1%' | xargs stat -c %a
    type: "skip"
    tests:
      test_items:
      - flag: "700"
        compare:
          op: eq
          value: "700"
        set: true
    remediation: |
      On the etcd server node, get the etcd data directory, passed as an argument --data-dir ,
      from the below command:
      ps -ef | grep $etcdbin
      Run the below command (based on the etcd data directory found above). For example,
      chmod 700 /var/lib/etcd
    scored: true

  - id: 3.1.4
    text: "Ensure that the etcd data directory ownership is set to etcd:etcd (Scored)"
    audit: ps -ef | grep $etcdbin | grep -- --data-dir | sed 's%.*data-dir[= ]\([^ ]*\).*%\1%' | xargs stat -c %U:%G
    type: "skip"
    tests:
      test_items:
      - flag: "etcd:etcd"
        set: true
    remediation: |
      On the etcd server node, get the etcd data directory, passed as an argument --data-dir ,
      from the below command:
      ps -ef | grep $etcdbin
      Run the below command (based on the etcd data directory found above). For example,
      chown etcd:etcd /var/lib/etcd
    scored: true

- id: 3.2
  text: "etcd"
  checks:

  - id: 3.2.1
    text: "Ensure that the cert-file and key-file arguments are set as appropriate (Scored)"
    audit: "cat /var/snap/etcd/common/etcd.conf.yml"
    tests:
      bin_op: and
      test_items:
        - path: "{.client-transport-security.cert-file}"
          set: true
        - path: "{.client-transport-security.key-file}"
          set: true
    remediation: |
      Follow the etcd service documentation and configure TLS encryption.
      Then, edit the etcd pod specification file $etcdconf on the
      master node and set the below parameters.
      --ca-file=</path/to/ca-file>
      --key-file=</path/to/key-file>
    scored: true

  - id: 3.2.2
    text: "Ensure that the client-cert-auth argument is set to true (Scored)"
    audit: "cat /var/snap/etcd/common/etcd.conf.yml"
    tests:
      test_items:
        - path: "{.client-transport-security.client-cert-auth}"
          compare:
            op: eq
            value: true
          set: true
    remediation: |
      Follow the etcd service documentation and configure TLS encryption.
      Then, edit the etcd pod specification file $etcdconf on the
      master node and set the below parameters.
      --ca-file=</path/to/ca-file>
      --key-file=</path/to/key-file>
    scored: true

  - id: 3.2.3
    text: "Ensure that the auto-tls argument is not set to true (Scored)"
    audit: "cat /var/snap/etcd/common/etcd.conf.yml"
    tests:
      bin_op: or
      test_items:
        - path: "{.client-transport-security.auto-tls}"
          set: false
        - path: "{.client-transport-security.auto-tls}"
          compare:
            op: eq
            value: false
          set: true
    remediation: |
      Edit the etcd pod specification file $etcdconf on the master
      node and either remove the --auto-tls parameter or set it to false.
        --auto-tls=false
    scored: true

  - id: 3.2.4
    text: "Ensure that the peer-cert-file and peer-key-file arguments are
    set as appropriate (Scored)"
    audit: "cat /var/snap/etcd/common/etcd.conf.yml"
    tests:
      bin_op: and
      test_items:
        - path: "{.peer-transport-security.cert-file}"
          set : true
        - path: "{.peer-transport-security.key-file}"
          set: true
    remediation: |
      Follow the etcd service documentation and configure peer TLS encryption as appropriate
      for your etcd cluster. Then, edit the etcd pod specification file $etcdconf on the
      master node and set the below parameters.
      --peer-client-file=</path/to/peer-cert-file>
      --peer-key-file=</path/to/peer-key-file>
    scored: true

  - id: 3.2.5
    text: "Ensure that the peer-client-cert-auth argument is set to true (Scored)"
    audit: "cat /var/snap/etcd/common/etcd.conf.yml"
    tests:
      test_items:
      - path: "{.peer-transport-security.client-cert-auth}"
        compare:
          op: eq
          value: true
        set: true
    remediation: |
      Edit the etcd pod specification file $etcdconf on the master
      node and set the below parameter.
      --peer-client-cert-auth=true
    scored: true

  - id: 3.2.6
    text: "Ensure that the peer-auto-tls argument is not set to true (Scored)"
    audit: "cat /var/snap/etcd/common/etcd.conf.yml"
    tests:
      bin_op: or
      test_items:
      - path: "{.peer-transport-security.auto-tls}"
        set: false
      - path: "{.peer-transport-security.auto-tls}"
        compare:
          op: eq
          value: false
        set: true
    remediation: |
      Edit the etcd pod specification file $etcdconf on the master
      node and either remove the --peer-auto-tls parameter or set it to false.
      --peer-auto-tls=false
    scored: true

  - id: 3.2.7
    text: "Ensure that a unique Certificate Authority is used for etcd (Not Scored)"
    audit: "cat /var/snap/etcd/common/etcd.conf.yml"
    tests:
      bin_op: and
      test_items:
      - path: "{.client-transport-security.trusted-ca-file}"
        set: true
      - path: "{.peer-transport-security.trusted-ca-file}"
        set: true
    remediation: |
      Follow the etcd documentation and create a dedicated certificate authority setup for the
      etcd service.
      Then, edit the etcd pod specification file $etcdconf on the
      master node and set the below parameter.
      --trusted-ca-file=</path/to/ca-file>
    scored: false
